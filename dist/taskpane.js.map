{"version":3,"file":"taskpane.js","mappings":"AAMAA,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAgBF,SAASG,eAAe,iBACxCC,EAAaJ,SAASG,eAAe,cACrCE,EAAeL,SAASG,eAAe,WAG7C,IAAIG,EAAe,MAEnBC,eAAeC,IAETF,IACFG,aAAaH,GACbA,EAAe,MAGjBD,EAAaK,MAAMC,QAAU,eAC7BP,EAAWQ,YAAc,GACzBV,EAAcW,UAAW,EAEzB,IACE,MAAMC,QAAYC,MAtBc,mCAuBhC,IAAKD,EAAIE,GAAI,MAAM,IAAIC,MAAM,QAAQH,EAAII,UACzC,MAAMC,QAAaL,EAAIM,OACvB,IAAKC,MAAMC,QAAQH,EAAKI,QACtB,MAAM,IAAIN,MAAM,6BAElBf,EAAcsB,UAAY,GAC1BL,EAAKI,OAAOE,SAASC,IACnB,MAAMC,EAAM3B,SAAS4B,cAAc,UACnCD,EAAIE,MAAQH,EAAMI,GAClBH,EAAIf,YAAcc,EAAMI,GACxB5B,EAAc6B,YAAYJ,MAG5BzB,EAAcW,UAAW,EACzBR,EAAaK,MAAMC,QAAU,MAC/B,CAAE,MAAOqB,GACPC,QAAQC,MAAMF,GACd9B,EAAcsB,UAAY,iDAC1BpB,EAAWQ,YACT,mDACFV,EAAcW,UAAW,EAGzBP,EAAe6B,WAAW3B,EAvCP,IAwCrB,CACF,CAEAA","sources":["webpack://exceljax/./src/taskpane/taskpane.js"],"sourcesContent":["/* global document, fetch, console, LM_API_URL */\nconst DEFAULT_LM_API_URL = \"http://localhost:1234/v1/models\";\n// LM_API_URL is replaced at build time via Webpack's DefinePlugin.\nconst MODELS_URL =\n  typeof LM_API_URL !== \"undefined\" ? LM_API_URL : DEFAULT_LM_API_URL;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const modelDropdown = document.getElementById(\"modelDropdown\");\n  const modelError = document.getElementById(\"modelError\");\n  const modelSpinner = document.getElementById(\"spinner\");\n\n  const RETRY_DELAY_MS = 5000;\n  let retryTimeout = null;\n\n  async function loadModels() {\n    // clear any pending retry since we're attempting a fetch now\n    if (retryTimeout) {\n      clearTimeout(retryTimeout);\n      retryTimeout = null;\n    }\n\n    modelSpinner.style.display = \"inline-block\";\n    modelError.textContent = \"\";\n    modelDropdown.disabled = true;\n\n    try {\n      const res = await fetch(MODELS_URL);\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\n      const data = await res.json();\n      if (!Array.isArray(data.models))\n        throw new Error(\"Unexpected model response\");\n\n      modelDropdown.innerHTML = \"\";\n      data.models.forEach((model) => {\n        const opt = document.createElement(\"option\");\n        opt.value = model.id;\n        opt.textContent = model.id;\n        modelDropdown.appendChild(opt);\n      });\n\n      modelDropdown.disabled = false;\n      modelSpinner.style.display = \"none\";\n    } catch (err) {\n      console.error(err);\n      modelDropdown.innerHTML = `<option disabled>Error loading models</option>`;\n      modelError.textContent =\n        \"LM Studio is not running. Retrying connection...\";\n      modelDropdown.disabled = true;\n\n      // schedule another attempt to fetch models\n      retryTimeout = setTimeout(loadModels, RETRY_DELAY_MS);\n    }\n  }\n\n  loadModels();\n});\n"],"names":["document","addEventListener","modelDropdown","getElementById","modelError","modelSpinner","retryTimeout","async","loadModels","clearTimeout","style","display","textContent","disabled","res","fetch","ok","Error","status","data","json","Array","isArray","models","innerHTML","forEach","model","opt","createElement","value","id","appendChild","err","console","error","setTimeout"],"sourceRoot":""}
