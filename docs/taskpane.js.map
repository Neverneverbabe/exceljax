{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/* global console, document, Excel, Office, fetch, localStorage */\n\nconst defaultConfig = {\n  endpoint: \"http://localhost:1234/v1/chat/completions\",\n  model: \"meta-llama-3.1-8b-instruct\",\n  token: \"\", // optional auth token\n  maxHistory: 10,\n};\n\nlet config = { ...defaultConfig, ...JSON.parse(localStorage.getItem(\"llmConfig\") || \"{}\") };\nconst conversationHistory = [];\nlet statusElem;\nlet dialog = null;\n\nfunction saveConfig() {\n  localStorage.setItem(\"llmConfig\", JSON.stringify(config));\n}\n\nfunction updateInputsFromConfig() {\n  document.getElementById(\"endpointInput\").value = config.endpoint;\n  const select = document.getElementById(\"modelSelect\");\n  if (select) select.value = config.model;\n  const tokenInput = document.getElementById(\"tokenInput\");\n  if (tokenInput) tokenInput.value = config.token;\n}\n\nasync function fetchWithRetry(url, options, retries = 2) {\n  for (let i = 0; i <= retries; i++) {\n    try {\n      const res = await fetch(url, options);\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\n      return res;\n    } catch (err) {\n      if (i === retries) throw err;\n    }\n  }\n}\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n\n    document.getElementById(\"chatBtn\").onclick = chatWithAI;\n    document.getElementById(\"analyzeSelectionBtn\").onclick = analyzeSelectedCells;\n    document.getElementById(\"analyzeSheetBtn\").onclick = analyzeEntireSheet;\n    document.getElementById(\"suggestFormulaBtn\").onclick = suggestFormulaForSelectedCells;\n    document.getElementById(\"improveFormulaBtn\").onclick = improveExistingFormula;\n    document.getElementById(\"createVisualsBtn\").onclick = createVisualsBasedOnData;\n    document.getElementById(\"create-table\").onclick = createTable;\n    document.getElementById(\"filter-table\").onclick = filterTable;\n    document.getElementById(\"sort-table\").onclick = sortTable;\n    document.getElementById(\"create-chart\").onclick = createChart;\n    document.getElementById(\"freeze-header\").onclick = freezeHeader;\n    const pivotBtn = document.getElementById(\"pivot-suggestion\");\n    if (pivotBtn) pivotBtn.onclick = suggestPivotTable;\n    document.getElementById(\"open-dialog\").onclick = openDialog;\n    document.getElementById(\"saveSettingsBtn\").onclick = () => {\n      config.endpoint =\n        document.getElementById(\"endpointInput\").value.trim() || defaultConfig.endpoint;\n      const modelSelect = document.getElementById(\"modelSelect\");\n      config.model = modelSelect ? modelSelect.value.trim() : defaultConfig.model;\n      const tokenInput = document.getElementById(\"tokenInput\");\n      config.token = tokenInput ? tokenInput.value.trim() : \"\";\n      saveConfig();\n    };\n    statusElem = document.getElementById(\"status\");\n    updateInputsFromConfig();\n  }\n});\n\nasync function sendToLLM(prompt) {\n  const maxPrompt = 6000;\n  if (prompt.length > maxPrompt) {\n    prompt = prompt.slice(0, maxPrompt) + \"\\n[Truncated]\";\n  }\n\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n  if (config.token) {\n    headers[\"Authorization\"] = `Bearer ${config.token}`;\n  }\n\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({\n      model: config.model,\n\n      temperature: 0.7,\n      stream: false,\n    }),\n  };\n\n  let response;\n  try {\n    response = await fetchWithRetry(config.endpoint, options);\n  } catch (err) {\n    console.error(\"❌ Fetch error:\", err);\n    throw new Error(`Failed to reach LLM: ${err.message}`);\n  }\n\n  const data = await response.json().catch((err) => {\n    console.error(\"❌ Invalid JSON:\", err);\n    throw err;\n  });\n\n  // Handle both completion and chat-style formats\n  if (data.choices?.[0]?.text) {\n    return data.choices[0].text.trim();\n  } else if (data.choices?.[0]?.message?.content) {\n    return data.choices[0].message.content.trim();\n  } else {\n    return \"⚠ No valid response format found from LLM.\";\n  }\n}\n\nasync function analyzeSelectedCells() {\n  try {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load(\"values\");\n      await context.sync();\n\n      const values = range.values;\n      const prompt = `Analyze the following Excel data and provide summaries, patterns, or suggestions:\\n\\n${JSON.stringify(values)}`;\n      statusElem.textContent = \"\";\n      const result = await sendToLLM(prompt);\n\n      // Output result safely to one cell just below the selected range\n      range.getOffsetRange(values.length + 1, 0).getCell(0, 0).values = [[result]];\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"❌ Error in analyzeSelectedCells:\", error);\n    if (statusElem) {\n      statusElem.textContent = error.message || \"Error communicating with LLM\";\n    }\n  }\n}\n\nasync function chatWithAI() {\n  try {\n    const input = document.getElementById(\"promptInput\").value.trim();\n    if (!input) {\n      return;\n    }\n    const output = document.getElementById(\"chatOutput\");\n    output.textContent = \"Thinking...\";\n    statusElem.textContent = \"\";\n    conversationHistory.push(`User: ${input}`);\n    if (conversationHistory.length > config.maxHistory * 2) {\n      conversationHistory.splice(0, conversationHistory.length - config.maxHistory * 2);\n    }\n    const result = await sendToLLM(conversationHistory.join(\"\\n\"));\n    conversationHistory.push(`Assistant: ${result}`);\n    if (conversationHistory.length > config.maxHistory * 2) {\n      conversationHistory.splice(0, conversationHistory.length - config.maxHistory * 2);\n    }\n    output.textContent = result;\n  } catch (error) {\n    console.error(\"❌ Error in chatWithAI:\", error);\n    if (statusElem) {\n      statusElem.textContent = error.message || \"Error communicating with LLM\";\n    }\n  }\n}\n\nasync function analyzeEntireSheet() {\n  try {\n    await Excel.run(async (context) => {\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n      const used = sheet.getUsedRange();\n      used.load(\"values\");\n      await context.sync();\n\n      const prompt = `Summarize the following worksheet data:\\n\\n${JSON.stringify(used.values)}`;\n      statusElem.textContent = \"\";\n      const result = await sendToLLM(prompt);\n\n      const summarySheet = context.workbook.worksheets.add(\"LLM Summary\");\n      summarySheet.getRange(\"A1\").values = [[result]];\n      summarySheet.activate();\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"❌ Error in analyzeEntireSheet:\", error);\n    if (statusElem) {\n      statusElem.textContent = error.message || \"Error communicating with LLM\";\n    }\n  }\n}\n\nasync function suggestFormulaForSelectedCells() {\n  try {\n    await Excel.run(async (context) => {\n      const cell = context.workbook.getSelectedRange();\n      cell.load(\"address\");\n      await context.sync();\n\n      const description = document.getElementById(\"promptInput\").value.trim();\n      if (!description) {\n        return;\n      }\n\n      const prompt = `Provide an Excel formula only for: ${description}`;\n      statusElem.textContent = \"\";\n      const formula = await sendToLLM(prompt);\n      cell.formulas = [[formula]];\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"❌ Error in suggestFormulaForSelectedCells:\", error);\n    if (statusElem) {\n      statusElem.textContent = error.message || \"Error communicating with LLM\";\n    }\n  }\n}\n\nasync function improveExistingFormula() {\n  try {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load(\"formulas\");\n      await context.sync();\n\n      const formulas = range.formulas;\n      const prompt = `Improve or simplify these formulas. Return them in the same order separated by new lines:\\n${JSON.stringify(formulas)}`;\n      statusElem.textContent = \"\";\n      const result = await sendToLLM(prompt);\n      const lines = result.split(/\\r?\\n/).filter((l) => l.trim().length > 0);\n\n      const rows = formulas.length;\n      const cols = formulas[0].length;\n      if (lines.length === rows * cols) {\n        const newFormulas = [];\n        let idx = 0;\n        for (let r = 0; r < rows; r++) {\n          newFormulas[r] = [];\n          for (let c = 0; c < cols; c++) {\n            newFormulas[r][c] = lines[idx++] || formulas[r][c];\n          }\n        }\n        range.formulas = newFormulas;\n      } else if (lines.length === 1 && rows === 1 && cols === 1) {\n        range.formulas = [[lines[0]]];\n      }\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"❌ Error in improveExistingFormula:\", error);\n    if (statusElem) {\n      statusElem.textContent = error.message || \"Error communicating with LLM\";\n    }\n  }\n}\n\nasync function createVisualsBasedOnData() {\n  try {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load([\"values\", \"rowCount\", \"columnCount\"]);\n      await context.sync();\n\n      const prompt = `Suggest the best chart type for this data: ${JSON.stringify(range.values)}`;\n      statusElem.textContent = \"\";\n      const suggestion = await sendToLLM(prompt);\n      let chartType = \"ColumnClustered\";\n      const text = suggestion.toLowerCase();\n      if (text.includes(\"line\")) chartType = \"Line\";\n      else if (text.includes(\"pie\")) chartType = \"Pie\";\n      else if (text.includes(\"bar\")) chartType = \"BarClustered\";\n      else if (text.includes(\"scatter\")) chartType = \"XYScatter\";\n\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n      const chart = sheet.charts.add(chartType, range, Excel.ChartSeriesBy.columns);\n      chart.setPosition(\n        range.getOffsetRange(range.rowCount + 1, 0),\n        range.getOffsetRange(range.rowCount + 15, range.columnCount)\n      );\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"❌ Error in createVisualsBasedOnData:\", error);\n    if (statusElem) {\n      statusElem.textContent = error.message || \"Error communicating with LLM\";\n    }\n  }\n}\n\nasync function createTable() {\n  try {\n    await Excel.run(async (context) => {\n      const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      const expensesTable = currentWorksheet.tables.add(\"A1:D1\", true);\n      expensesTable.name = \"ExpensesTable\";\n\n      expensesTable.getHeaderRowRange().values = [[\"Date\", \"Merchant\", \"Category\", \"Amount\"]];\n\n      expensesTable.rows.add(null, [\n        [\"1/1/2017\", \"The Phone Company\", \"Communications\", \"120\"],\n        [\"1/2/2017\", \"Northwind Electric Cars\", \"Transportation\", \"142.33\"],\n        [\"1/5/2017\", \"Best For You Organics Company\", \"Groceries\", \"27.9\"],\n        [\"1/10/2017\", \"Coho Vineyard\", \"Restaurant\", \"33\"],\n        [\"1/11/2017\", \"Bellows College\", \"Education\", \"350.1\"],\n        [\"1/15/2017\", \"Trey Research\", \"Other\", \"135\"],\n        [\"1/15/2017\", \"Best For You Organics Company\", \"Groceries\", \"97.88\"],\n      ]);\n\n      expensesTable.columns.getItemAt(3).getRange().numberFormat = [[\"\\u20AC#,##0.00\"]];\n      expensesTable.getRange().format.autofitColumns();\n      expensesTable.getRange().format.autofitRows();\n\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function filterTable() {\n  try {\n    await Excel.run(async (context) => {\n      const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      const expensesTable = currentWorksheet.tables.getItem(\"ExpensesTable\");\n      const categoryColumn = expensesTable.columns.getItem(\"Category\");\n      categoryColumn.load(\"filter\");\n      await context.sync();\n      categoryColumn.filter.applyValuesFilter([\"Education\", \"Groceries\"]);\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function sortTable() {\n  try {\n    await Excel.run(async (context) => {\n      const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      const expensesTable = currentWorksheet.tables.getItem(\"ExpensesTable\");\n      const sortFields = [\n        {\n          key: 1,\n          ascending: false,\n        },\n      ];\n\n      expensesTable.sort.apply(sortFields);\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function createChart() {\n  try {\n    await Excel.run(async (context) => {\n      const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      const expensesTable = currentWorksheet.tables.getItem(\"ExpensesTable\");\n      const dataRange = expensesTable.getDataBodyRange();\n      const chart = currentWorksheet.charts.add(\"ColumnClustered\", dataRange, \"Auto\");\n      chart.setPosition(\"A15\", \"F30\");\n      chart.title.text = \"Expenses\";\n      chart.legend.position = \"Right\";\n      chart.legend.format.fill.setSolidColor(\"white\");\n      chart.dataLabels.format.font.size = 15;\n      chart.dataLabels.format.font.color = \"black\";\n      chart.series.getItemAt(0).name = \"Value in \\u20AC\";\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function freezeHeader() {\n  try {\n    await Excel.run(async (context) => {\n      const currentWorksheet = context.workbook.worksheets.getActiveWorksheet();\n      currentWorksheet.freezePanes.freezeRows(1);\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction openDialog() {\n  Office.context.ui.displayDialogAsync(\n    \"https://localhost:3000/popup.html\",\n    { height: 45, width: 55 },\n    function (result) {\n      dialog = result.value;\n      dialog.addEventHandler(Office.EventType.DialogMessageReceived, processMessage);\n    }\n  );\n}\n\nfunction processMessage(arg) {\n  document.getElementById(\"user-name\").innerHTML = arg.message;\n  dialog.close();\n}\n\nasync function suggestPivotTable() {\n  try {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load(\"values\");\n      await context.sync();\n\n      const prompt = `Suggest a pivot table layout for the following data:\\n\\n${JSON.stringify(range.values)}`;\n      statusElem.textContent = \"\";\n      const result = await sendToLLM(prompt);\n      range.getOffsetRange(range.rowCount + 1, 0).getCell(0, 0).values = [[result]];\n      await context.sync();\n    });\n  } catch (error) {\n    console.error(\"❌ Error in suggestPivotTable:\", error);\n    if (statusElem) {\n      statusElem.textContent = error.message || \"Error communicating with LLM\";\n    }\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"./taskpane.js\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"../../assets/Scott Pope.jpg\", import.meta.url);\n// Module\nvar code = \"<!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"/> <title>Jaxs Ai</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\"><\" + \"/script> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"110\\\" height=\\\"110\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_2___ + \"\\\" alt=\\\"Jaxs Ai\\\" title=\\\"Jaxs Ai\\\" style=\\\"border-radius:50%\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\"> Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body. </h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\">Discover what this Excel AI add-in can do:</h2> <ul class=\\\"ms-List ms-welcome__features\\\"> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--BarChart4 ms-font-xl\\\"></i> <span class=\\\"ms-font-m\\\">Summarize Excel data</span> </li> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--Insights ms-font-xl\\\"></i> <span class=\\\"ms-font-m\\\">Spot trends and patterns</span> </li> <li class=\\\"ms-ListItem\\\"> <i class=\\\"ms-Icon ms-Icon--ExcelDocument ms-font-xl\\\"></i> <span class=\\\"ms-font-m\\\">Suggest formulas and cleanups</span> </li> </ul> <div id=\\\"chat-section\\\" style=\\\"width:100%\\\"> <textarea id=\\\"promptInput\\\" rows=\\\"3\\\" placeholder=\\\"Ask a question...\\\" class=\\\"ms-TextField\\\"></textarea> <button id=\\\"chatBtn\\\" class=\\\"ms-Button ms-Button--primary action-btn\\\">🔍 Chat with AI</button> <div id=\\\"chatOutput\\\" class=\\\"output\\\"></div> <div id=\\\"status\\\" class=\\\"status\\\"></div> </div> <div id=\\\"settings-section\\\" style=\\\"width:100%;margin-top:10px\\\"> <input id=\\\"endpointInput\\\" class=\\\"ms-TextField settings-input\\\" placeholder=\\\"LLM endpoint\\\"/> <select id=\\\"modelSelect\\\" class=\\\"ms-TextField settings-input\\\"> <option value=\\\"meta-llama-3.1-8b-instruct\\\">meta-llama-3.1-8b-instruct</option> <option value=\\\"text-embedding-nomic-embed-text-v1.5\\\">text-embedding-nomic-embed-text-v1.5</option> <option value=\\\"codellama-7b-instruct\\\">codellama-7b-instruct</option> <option value=\\\"deepseek-r1-distill-qwen-7b\\\">deepseek-r1-distill-qwen-7b</option> <option value=\\\"deepseek-math-7b-instruct\\\">deepseek-math-7b-instruct</option> </select> <input id=\\\"tokenInput\\\" class=\\\"ms-TextField settings-input\\\" placeholder=\\\"API token (optional)\\\"/> <button id=\\\"saveSettingsBtn\\\" class=\\\"ms-Button ms-Button--primary action-btn\\\">Save Settings</button> </div> <button id=\\\"analyzeSelectionBtn\\\" class=\\\"ms-Button ms-Button--primary action-btn\\\">📊 Analyze Selected Cells</button> <button id=\\\"analyzeSheetBtn\\\" class=\\\"ms-Button ms-Button--primary action-btn\\\">📄 Analyze Entire Sheet</button> <button id=\\\"suggestFormulaBtn\\\" class=\\\"ms-Button ms-Button--primary action-btn\\\">🧠 Suggest Formula for Selected Cells</button> <button id=\\\"improveFormulaBtn\\\" class=\\\"ms-Button ms-Button--primary action-btn\\\">✍️ Improve Existing Formula</button> <button id=\\\"createVisualsBtn\\\" class=\\\"ms-Button ms-Button--primary action-btn\\\">📈 Create Visuals Based on Data</button> <button class=\\\"ms-Button\\\" id=\\\"create-table\\\">Create Table</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"filter-table\\\">Filter Table</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"sort-table\\\">Sort Table</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"create-chart\\\">Create Chart</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"freeze-header\\\">Freeze Header</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"pivot-suggestion\\\">Suggest Pivot Table</button><br/><br/> <button class=\\\"ms-Button\\\" id=\\\"open-dialog\\\">Open Dialog</button><br/><br/> <label id=\\\"user-name\\\"></label><br/><br/> </main> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","g","globalThis","this","Function","e","window","o","obj","prop","Object","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","t","r","Symbol","n","iterator","toStringTag","c","Generator","u","create","_regeneratorDefine2","f","y","G","v","a","d","bind","l","TypeError","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","defineProperty","enumerable","configurable","writable","_invoke","_typeof","constructor","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","toPrimitive","String","_toPrimitive","_toPropertyKey","statusElem","defaultConfig","endpoint","model","token","maxHistory","config","JSON","parse","localStorage","getItem","conversationHistory","dialog","fetchWithRetry","_x","_x2","_fetchWithRetry","_callee","url","options","retries","res","_t","_args","_context","fetch","ok","concat","status","sendToLLM","_x3","_sendToLLM","_callee2","prompt","_data$choices","_data$choices2","headers","response","data","_t2","_context2","slice","method","body","stringify","temperature","stream","console","error","message","json","catch","err","choices","text","trim","content","analyzeSelectedCells","_analyzeSelectedCells","_callee4","_t3","_context4","Excel","run","_ref","_callee3","context","range","values","result","_context3","workbook","getSelectedRange","load","sync","textContent","getOffsetRange","getCell","_x4","chatWithAI","_chatWithAI","_callee5","input","output","_t4","_context5","getElementById","splice","join","analyzeEntireSheet","_analyzeEntireSheet","_callee7","_t5","_context7","_ref2","_callee6","sheet","used","summarySheet","_context6","worksheets","getActiveWorksheet","getUsedRange","add","getRange","activate","_x5","suggestFormulaForSelectedCells","_suggestFormulaForSelectedCells","_callee9","_t6","_context9","_ref3","_callee8","cell","description","formula","_context8","formulas","_x6","improveExistingFormula","_improveExistingFormula","_callee1","_t7","_context1","_ref4","_callee0","lines","rows","cols","newFormulas","idx","_context0","split","_x7","createVisualsBasedOnData","_createVisualsBasedOnData","_callee11","_t8","_context11","_ref5","_callee10","suggestion","chartType","_context10","toLowerCase","includes","charts","ChartSeriesBy","columns","setPosition","rowCount","columnCount","_x8","createTable","_createTable","_callee13","_t9","_context13","_ref6","_callee12","currentWorksheet","expensesTable","_context12","tables","name","getHeaderRowRange","getItemAt","numberFormat","format","autofitColumns","autofitRows","_x9","filterTable","_filterTable","_callee15","_t0","_context15","_ref7","_callee14","categoryColumn","_context14","applyValuesFilter","_x0","sortTable","_sortTable","_callee17","_t1","_context17","_ref8","_callee16","sortFields","_context16","key","ascending","sort","_x1","createChart","_createChart","_callee19","_t10","_context19","_ref9","_callee18","dataRange","chart","_context18","getDataBodyRange","title","legend","position","fill","setSolidColor","dataLabels","font","size","color","series","_x10","freezeHeader","_freezeHeader","_callee21","_t11","_context21","_ref0","_callee20","_context20","freezePanes","freezeRows","_x11","openDialog","Office","ui","displayDialogAsync","height","width","addEventHandler","EventType","DialogMessageReceived","processMessage","arg","innerHTML","close","suggestPivotTable","_suggestPivotTable","_callee23","_t12","_context23","_ref1","_callee22","_context22","_x12","onReady","info","host","HostType","style","display","onclick","pivotBtn","modelSelect","tokenInput","setItem","select","updateInputsFromConfig","URL"],"sourceRoot":""}
