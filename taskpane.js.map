{"version":3,"file":"taskpane.js","mappings":"AAMAA,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAgBF,SAASG,eAAe,iBACxCC,EAAaJ,SAASG,eAAe,cACrCE,EAAeL,SAASG,eAAe,YAE7CG,iBACED,EAAaE,MAAMC,QAAU,eAC7BJ,EAAWK,YAAc,GACzBP,EAAcQ,UAAW,EACzB,IACE,MAAMC,QAAYC,MAZc,mCAahC,IAAKD,EAAIE,GAAI,MAAM,IAAIC,MAAM,QAAQH,EAAII,UACzC,MAAMC,QAAaL,EAAIM,OACvB,IAAKC,MAAMC,QAAQH,EAAKI,QACtB,MAAM,IAAIN,MAAM,6BAClBZ,EAAcmB,UAAY,GAC1BL,EAAKI,OAAOE,SAASC,IACnB,MAAMC,EAAMxB,SAASyB,cAAc,UACnCD,EAAIE,MAAQH,EAAMI,GAClBH,EAAIf,YAAcc,EAAMI,GACxBzB,EAAc0B,YAAYJ,MAE5BtB,EAAcQ,UAAW,CAC3B,CAAE,MAAOmB,GACPC,QAAQC,MAAMF,GACd3B,EAAcmB,UAAY,iDAC1BjB,EAAWK,YACT,kEACFP,EAAcQ,UAAW,CAC3B,CAAE,QACAL,EAAaE,MAAMC,QAAU,MAC/B,CACF,CAEAwB","sources":["webpack://exceljax/./src/taskpane/taskpane.js"],"sourcesContent":["/* global document, fetch, console, LM_API_URL */\nconst DEFAULT_LM_API_URL = \"http://localhost:1234/v1/models\";\n// LM_API_URL is replaced at build time via Webpack's DefinePlugin.\nconst MODELS_URL =\n  typeof LM_API_URL !== \"undefined\" ? LM_API_URL : DEFAULT_LM_API_URL;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const modelDropdown = document.getElementById(\"modelDropdown\");\n  const modelError = document.getElementById(\"modelError\");\n  const modelSpinner = document.getElementById(\"spinner\");\n\n  async function loadModels() {\n    modelSpinner.style.display = \"inline-block\";\n    modelError.textContent = \"\";\n    modelDropdown.disabled = true;\n    try {\n      const res = await fetch(MODELS_URL);\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\n      const data = await res.json();\n      if (!Array.isArray(data.models))\n        throw new Error(\"Unexpected model response\");\n      modelDropdown.innerHTML = \"\";\n      data.models.forEach((model) => {\n        const opt = document.createElement(\"option\");\n        opt.value = model.id;\n        opt.textContent = model.id;\n        modelDropdown.appendChild(opt);\n      });\n      modelDropdown.disabled = false;\n    } catch (err) {\n      console.error(err);\n      modelDropdown.innerHTML = `<option disabled>Error loading models</option>`;\n      modelError.textContent =\n        \"LM Studio is not running. Features requiring LLMs are disabled.\";\n      modelDropdown.disabled = true;\n    } finally {\n      modelSpinner.style.display = \"none\";\n    }\n  }\n\n  loadModels();\n});\n"],"names":["document","addEventListener","modelDropdown","getElementById","modelError","modelSpinner","async","style","display","textContent","disabled","res","fetch","ok","Error","status","data","json","Array","isArray","models","innerHTML","forEach","model","opt","createElement","value","id","appendChild","err","console","error","loadModels"],"sourceRoot":""}